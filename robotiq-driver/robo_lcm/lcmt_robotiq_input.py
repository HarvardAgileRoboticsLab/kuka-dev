"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class lcmt_robotiq_input(object):
    __slots__ = ["gACT", "gGTO", "gSTA", "gOBJ", "gFLT", "gPR", "gPO", "gCU"]

    def __init__(self):
        self.gACT = 0
        self.gGTO = 0
        self.gSTA = 0
        self.gOBJ = 0
        self.gFLT = 0
        self.gPR = 0
        self.gPO = 0
        self.gCU = 0

    def encode(self):
        buf = BytesIO()
        buf.write(lcmt_robotiq_input._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">BBBBBBBB", self.gACT, self.gGTO, self.gSTA, self.gOBJ, self.gFLT, self.gPR, self.gPO, self.gCU))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != lcmt_robotiq_input._get_packed_fingerprint():
            raise ValueError("Decode error")
        return lcmt_robotiq_input._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = lcmt_robotiq_input()
        self.gACT, self.gGTO, self.gSTA, self.gOBJ, self.gFLT, self.gPR, self.gPO, self.gCU = struct.unpack(">BBBBBBBB", buf.read(8))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if lcmt_robotiq_input in parents: return 0
        tmphash = (0x5c12ee855f63565) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if lcmt_robotiq_input._packed_fingerprint is None:
            lcmt_robotiq_input._packed_fingerprint = struct.pack(">Q", lcmt_robotiq_input._get_hash_recursive([]))
        return lcmt_robotiq_input._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

